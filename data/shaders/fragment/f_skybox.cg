#version 430 core

in vec3 textureCoords;
out vec4 color;
 
layout(binding=9) uniform samplerCube cubeMap1;
layout(binding=10) uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform vec3 fogColor;
uniform vec3 lightColor;

const float lowerLimit = 0.0f;
const float upperLimit = 0.3f;

void main()
{
    vec4 color1 = texture(cubeMap1, textureCoords);
	vec4 color2 = texture(cubeMap2, textureCoords);

	color = mix(color1, color2, blendFactor) * vec4(lightColor, 1.0);

	//if there is a fog color
	float maxColor = max (max (fogColor.x, fogColor.y), fogColor.z);
	if(maxColor > 0.0f)
	{
		//making between lower and upper limit mix the fog color.
		float factor = (textureCoords.y - lowerLimit) / (upperLimit - lowerLimit);
		factor = clamp(factor, 0.0f, 1.0f);
		color = mix( vec4(fogColor, 1.0f), color, factor);
	}
}