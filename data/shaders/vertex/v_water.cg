#version 430 core

in mat4 M;
in vec3 vertexModelspace;
in vec2 textureCoordsModelspace;


uniform mat4 V;
uniform mat4 P;
uniform vec3 cameraPosition;
uniform vec3 lightPosition;
uniform float fogDensity;
uniform float fogGradient;

out vec2 textureCoords;
out vec4 clipSpace;
out vec3 cameraVector;
out vec3 fromLightVector;
out float fogVisibility;

const float tilling = 3.0;

void main()
{
	textureCoords = textureCoordsModelspace * tilling;
	vec4 worldPosition = M * vec4(vertexModelspace.xyz, 1.0f);
	vec4 positionRelativeToCamera = V * worldPosition;
	clipSpace = P * positionRelativeToCamera;
	gl_Position =  clipSpace;
	cameraVector = cameraPosition - worldPosition.xyz;
	fromLightVector = worldPosition.xyz - lightPosition;
	
	float distance = length(positionRelativeToCamera);
	fogVisibility = clamp(exp(-pow(distance * fogDensity, fogGradient)), 0.0f, 1.0f);
}