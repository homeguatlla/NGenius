#version 330 core

in mat4 M;
in vec3 vertexModelspace;
in vec2 textureCoordsModelspace;
in vec3 normalModelspace;
in vec3 tangentModelspace;


out vec2 textureCoords;
out vec3 positionWorldspace;
out vec3 contactPoint_;
out vec3 normal;

uniform mat4 V;
uniform mat4 P;
uniform vec3 contactPoint;

void main()
{
	textureCoords = textureCoordsModelspace;
	
	positionWorldspace = vec3(M * vec4(vertexModelspace, 1.0));
	contactPoint_ = contactPoint;
	vec4 positionRelativeToCamera = V * vec4(positionWorldspace, 1.0f);	
	gl_Position = P * positionRelativeToCamera;
	normal = normalize(vec3( M * vec4(normalModelspace, 0.0f) ));
}